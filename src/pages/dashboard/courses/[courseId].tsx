import { Button, Group, Input, Text, TextInput, Title } from "@mantine/core";
import { useForm } from "@mantine/form";
import { useDisclosure } from "@mantine/hooks";
import { IconCheck, IconEdit, IconLetterX } from "@tabler/icons-react";
import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import AdminDashboardLayout from "~/components/layouts/admin-dashboard-layout";
import { api } from "~/utils/api";

const Courses: NextPage = () => {
  const router = useRouter();
  const courseId = router.query.courseId as string;

  const updateCourseMutation = api.course.updateCourse.useMutation();

  const updateTitleForm = useForm({
    initialValues: {
      title: "",
    },
  });

  const courseQuery = api.course.getCourseById.useQuery(
    {
      courseId,
    },
    {
      enabled: !!courseId,
      onSuccess(data) {
        updateTitleForm.setFieldValue("title", data?.title ?? "");
      },
    }
  );

  const [isEditingTitle, { open: setEditTitle, close: unsetEditTitle }] =
    useDisclosure(false);

  return (
    <>
      <Head>
        <title>Manage Courses</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <AdminDashboardLayout>
          {isEditingTitle ? (
            <form
              onSubmit={updateTitleForm.onSubmit(async (values) => {
                await updateCourseMutation.mutateAsync({
                  ...values,
                  courseId,
                });
                await courseQuery.refetch();
                unsetEditTitle();
              })}
            >
              <Group>
                <TextInput
                  withAsterisk
                  required
                  placeholder="name your course here"
                  {...updateTitleForm.getInputProps("title")}
                />
                <Button color="green" type="submit">
                  <IconCheck />
                </Button>
                <Button color="gray" onClick={unsetEditTitle}>
                  <IconLetterX />
                </Button>
              </Group>
            </form>
          ) : (
            <Group>
              <Title order={1}>{courseQuery.data?.title}</Title>
              <Button color="gray" onClick={setEditTitle}>
                <IconEdit size="1rem" />
              </Button>
            </Group>
          )}
        </AdminDashboardLayout>
      </main>
    </>
  );
};

export default Courses;
